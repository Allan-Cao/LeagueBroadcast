<UserControl x:Class="LeagueBroadcast.MVVM.View.PickBanView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:LeagueBroadcast.MVVM.ViewModel"
             xmlns:local="clr-namespace:LeagueBroadcast.MVVM.View"
             xmlns:core="clr-namespace:LeagueBroadcast.MVVM.Core"
             xmlns:converters="clr-namespace:LeagueBroadcast.MVVM.Converters"
             xmlns:controls="clr-namespace:LeagueBroadcast.MVVM.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="695" d:DesignWidth="1080">
    <UserControl.Resources>
        <converters:InvertableBooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>

    <Border Width="1080" Height="695" x:Name="OpenContent">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOpen}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard AccelerationRatio="0.4" DecelerationRatio="0.4">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Width)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="1080"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard AccelerationRatio="0.4" DecelerationRatio="0.4">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Width)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="360"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <ScrollViewer VerticalScrollBarVisibility="Hidden"
                  CanContentScroll="True"
                  IsTabStop="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <controls:ToggleSwitch CheckedBackground="#5cc59e" 
                                       Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
                                       Foreground="White" 
                                       FontSize="20" FontWeight="Light" 
                                       HorizontalAlignment="Right" VerticalAlignment="Top" CheckHorizontalAlignment="Right" SwitchContentPlacement="Right"
                                       SwitchWidth="50" 
                                       IsChecked="{Binding IsActive}"/>

                <StackPanel Orientation="Vertical" x:Name="OrderConfig" Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1" >
                    <StackPanel x:Name="BlueTeamConfig" HorizontalAlignment="Stretch" DataContext="{Binding Source={x:Static viewModel:TeamConfigViewModel.BlueTeam}}" Margin="20,0,20,0">
                        <TextBlock Text="Team Name" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <TextBox Tag="Blue" TextChanged="TeamNameChanged" Text="{Binding Name}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Score" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <TextBox Tag="Blue" TextChanged="ScoreChanged" Text="{Binding Score}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Coach" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <TextBox Tag="Blue" TextChanged="CoachChanged" Text="{Binding Coach}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Color" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <Button Name="BlueColorSelect" Tag="Blue" Style="{StaticResource ColorSelectTheme}" Height="40" Margin="10,5,0,0" Click="BlueColorSelect_Click" Background="{Binding ColorBrush}"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Vertical" x:Name="ChaosConfig" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" >
                    <StackPanel x:Name="RedTeamConfig" HorizontalAlignment="Stretch" DataContext="{Binding Source={x:Static viewModel:TeamConfigViewModel.RedTeam}}" Margin="20,0,20,0" >
                        <TextBlock Text="Team Name" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,300,0"/>
                        <TextBox Tag="Red" TextChanged="TeamNameChanged" Text="{Binding Name}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Score" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <TextBox Tag="Red" TextChanged="ScoreChanged" Text="{Binding Score}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Coach" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <TextBox Tag="Red" TextChanged="CoachChanged" Text="{Binding Coach}" Template="{StaticResource LostFocusTextBox}" Margin="10,5,0,0"/>
                        <TextBlock Text="Color" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"/>
                        <Button Name="RedColorSelect" Tag="Red" Style="{StaticResource ColorSelectTheme}" Height="40" Margin="10,5,0,0" Click="RedColorSelect_Click" Background="{Binding ColorBrush}"/>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="2" Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Settings" Grid.Column="1" Foreground="White" FontWeight="Light" FontSize="25"/>
                    <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Patch" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                       HorizontalAlignment="Center"/>
                        <TextBox TextChanged="PatchChanged" Text="{Binding Patch}" Template="{StaticResource LostFocusTextBox}" Margin="0,5,0,0" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="1"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Show Score" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                       HorizontalAlignment="Center"/>
                        <controls:ToggleSwitch CheckedBackground="#5cc59e" 
                                       Foreground="White" 
                                       FontSize="20" FontWeight="Light" 
                                       HorizontalAlignment="Center" CheckHorizontalAlignment="Left" SwitchContentPlacement="Left"
                                       SwitchWidth="50" Margin="10,10,0,0"
                                       IsChecked="{Binding Score}"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="3" Grid.Row="1"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Show Coaches" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                       HorizontalAlignment="Center"/>
                        <controls:ToggleSwitch CheckedBackground="#5cc59e" 
                                       Foreground="White" 
                                       FontSize="20" FontWeight="Light" 
                                       HorizontalAlignment="Center" CheckHorizontalAlignment="Left" SwitchContentPlacement="Left"
                                       SwitchWidth="50" Margin="10,10,0,0"
                                       IsChecked="{Binding Coaches}"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="4" Grid.Row="1"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Show Spells" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                   HorizontalAlignment="Center"/>
                        <controls:ToggleSwitch CheckedBackground="#5cc59e" 
                                       Foreground="White" 
                                       FontSize="20" FontWeight="Light" 
                                       HorizontalAlignment="Center" CheckHorizontalAlignment="Left" SwitchContentPlacement="Left"
                                       SwitchWidth="50" Margin="10,10,0,0"
                                       IsChecked="{Binding Spells}"/>
                    </StackPanel>

                    <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="2"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Use Delay" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                   HorizontalAlignment="Center"/>
                        <controls:ToggleSwitch CheckedBackground="#5cc59e" 
                                       Foreground="White" 
                                       FontSize="20" FontWeight="Light" 
                                       HorizontalAlignment="Center" CheckHorizontalAlignment="Left" SwitchContentPlacement="Left"
                                       SwitchWidth="50" Margin="10,10,0,0"
                                       IsChecked="{Binding UseDelay}"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="2"
                                DataContext="{Binding Source={x:Static viewModel:PickBanConfigViewModel.ChampSelectSettings}}">
                        <TextBlock Text="Delay Amount" FontSize="20" Foreground="White" FontWeight="Light" Margin="0,10,0,0"
                                       HorizontalAlignment="Center"/>
                        <TextBox Text="{Binding DelayValue}"
                                 Template="{StaticResource LostFocusTextBox}" 
                                 Margin="-20,5,0,0" Width="100"
                                 PreviewTextInput="PreviewTextInputHandler" 
                                 DataObject.Pasting="PastingHandler"/>
                    </StackPanel>
                    <TextBlock Text="sec" Grid.Column="2" Grid.Row="2" Foreground="White" Margin="172,45,0,58" FontSize="20" FontWeight="Light"/>

                </Grid>
            </Grid>
        </ScrollViewer>
    </Border>
</UserControl>
